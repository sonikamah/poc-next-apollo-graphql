{"version":3,"file":"static/webpack/static\\development\\pages\\apolloQuery.js.dac2bad1dc188b96d936.hot-update.js","sources":["webpack:///./components/ApolloPostList/PostListQuery.js"],"sourcesContent":["import gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport PostUpvoter from './PostUpvoter'\r\nimport ErrorMessage from './ErrorMessage'\r\nimport {\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemContainer,\r\n  Num,\r\n  A,\r\n  Button\r\n} from './styles'\r\n\r\nconst POSTS_PER_PAGE = 10\r\n  \r\nconst GET_POSTS = gql`\r\n    query allPosts($first: Int!, $skip: Int!) {\r\n      allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\r\n        id\r\n        title\r\n        votes\r\n        url\r\n        createdAt\r\n      }\r\n      _allPostsMeta {\r\n        count\r\n      }\r\n    }\r\n  `\r\nconst skip = 0;\r\nconst variables = {\r\n    first: POSTS_PER_PAGE,\r\n    skip: 0\r\n}\r\n\r\nconst PostListQuery = () => (\r\n    <Query \r\n        query={GET_POSTS}\r\n        skip={skip}\r\n        variables={ variables } onCompleted={data => console.log(dataallPosts)}>\r\n      {({ data: {allPosts, _allPostsMeta}, loading, error, fetchMore }) => {\r\n        if (loading) return \"Loading...\";\r\n        if (error) return <ErrorMessage message=\"Error loading posts.\" />\r\n        if (allPosts && allPosts.length) {\r\n            const areMorePosts = allPosts.length < _allPostsMeta.count\r\n            return (\r\n              <Container>\r\n                <List>\r\n                  {allPosts.map((post, index) => (\r\n                    <ListItem key={post.id}>\r\n                      <ListItemContainer>\r\n                        <Num>{index + 1}. </Num>\r\n                        <A href={post.url}>{post.title}</A>\r\n                        <PostUpvoter id={post.id} votes={post.votes} />\r\n                      </ListItemContainer>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n                {areMorePosts ? (\r\n                  <Button onClick={() => fetchMore({\r\n                    variables: {\r\n                        skip: allPosts.length\r\n                      },\r\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n                        if (!fetchMoreResult) {\r\n                          return previousResult\r\n                        }\r\n                        return Object.assign({}, previousResult, {\r\n                          // Append the new posts results to the old one\r\n                          allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts]\r\n                        })\r\n                      }\r\n                  })}>\r\n                    {loading ? 'Loading...' : 'Show More'}\r\n                  </Button>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n              </Container>\r\n            )\r\n          }\r\n  \r\n          return <div>Loading... sonika</div>\r\n      }}\r\n    </Query>\r\n  );\r\n\r\n  export default PostListQuery;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAUA;AAEA;AAcA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAWA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjDA;AACA;AAoDA;;;;A","sourceRoot":""}