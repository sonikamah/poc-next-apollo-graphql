{"version":3,"file":"static/webpack/static\\development\\pages\\caching.js.548952a9644182ffb344.hot-update.js","sources":["webpack:///./components/Caching/ResolverUpdatePost.js","webpack:///./pages/caching.js"],"sourcesContent":["import { Query, Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport {\r\n    ListItem,\r\n    ListItemContainer,\r\n    Num,\r\n    A\r\n  } from '../ApolloPostList/styles'\r\n\r\nconst UPVOTE_POST = gql`\r\n  mutation updatePost($id: ID!, $votes: Int) {\r\n    updatePost(id: $id, votes: $votes) {\r\n      id\r\n      __typename\r\n      votes\r\n    }\r\n  }\r\n`\r\n\r\nconst GET_VOTES = gql`\r\n    query allPosts($first: Int!, $skip: Int!) {\r\n      allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\r\n        id\r\n        title\r\n        votes\r\n        url\r\n        createdAt\r\n      }\r\n      _allPostsMeta {\r\n        count\r\n      }\r\n    }\r\n  `\r\nconst ResolverUpdatePost = ({id, votes}) => {\r\n    return (\r\n        <>\r\n            <Query query={GET_VOTES} variables={ {first: 10, skip: 0} }>\r\n                {({ data: {allPosts}, loading }) => {\r\n                    if (loading) return \"Loading...\";\r\n                    return (\r\n                        allPosts.map((post, index) => (\r\n                            <ListItem key={post.id}>\r\n                            <ListItemContainer>\r\n                                <Num>{index + 1}. </Num>\r\n                                <A href={post.url}>{post.id} - {post.votes}</A>\r\n                            </ListItemContainer>\r\n                            </ListItem>\r\n                        ))\r\n                    )\r\n                }}\r\n            </Query>\r\n\r\n            <Mutation mutation={UPVOTE_POST} key={id}>\r\n                {( updatePost, {loading, error}) => {\r\n                    {loading && <p>Loading...</p>}\r\n                    {error && <p>Error :( Please try again</p>}\r\n                    return (\r\n                        <>  Change the votes of ID - {id}<br/>\r\n                            Updated Votes are <button onClick={() => updatePost({variables: {id, votes}})}> {votes} value using Above ID</button>\r\n                        </>\r\n                    )}\r\n                }   \r\n            </Mutation>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ResolverUpdatePost;","import { ApolloProvider } from \"react-apollo\";\r\nimport { HttpLink } from 'apollo-link-http'\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport App from '../components/Caching/clientQueryApp';\r\nimport ClientWriteData from '../components/Caching/ClientWriteData';\r\nimport ResetStore from '../components/Caching/onResetStore';\r\nimport ResolverUpdatePost from '../components/Caching/ResolverUpdatePost';\r\nimport Header from '../components/Header';\r\n\r\n\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n    uri: 'https://api.graph.cool/simple/v1/cixmkt2ul01q00122mksg82pn', // Server URL (must be absolute)\r\n    opts: {\r\n      credentials: 'same-origin' // Additional fetch() options like `credentials` or `headers`\r\n    }\r\n  })\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link\r\n});\r\n\r\nconst data = {\r\n    todos: [],\r\n    visibilityFilter: 'SHOW_ALL',\r\n    networkStatus: {\r\n        __typename: 'NetworkStatus',\r\n        isConnected: false,\r\n    },\r\n};\r\n\r\ncache.writeData({ data });\r\n\r\nconst Caching = () => (\r\n    <ApolloProvider client={client}>\r\n        <Header/>\r\n        1. <App />\r\n        2. <ClientWriteData/> <br/><br/>\r\n        3. <ResetStore/>\r\n        4. <ResolverUpdatePost />\r\n    </ApolloProvider>\r\n)\r\nexport default Caching;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAUA;AACA;AAaA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AASA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AAQA;;;;A","sourceRoot":""}